{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "bastionServerSettings": {
            "type": "object"
        },
        "networkSettings": {
            "type": "object"
        },
        "apiVersions": {
            "type": "object"
        },
        "MCSModules": {
            "type": "object"
        },
        "PIAFSQLSettings": {
            "type": "object"
        },
        "PIBAServersettings": {
            "type": "object"
        }
    },
    "variables": {
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('networkSettings').virtualNetworkName)]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('networkSettings').subnet1Name)]"
    },
    "resources": [
        {
            "name": "[parameters('bastionServerSettings').wsDiagStgAcnt]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[parameters('apiVersions').storageApiVersion]",
            "location": "[parameters('bastionServerSettings').location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('bastionServerSettings').wsPublicIpName]",
            "location": "[parameters('bastionServerSettings').location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('bastionServerSettings').wsClientDns]"
                }
            }
        },
        {
            "name": "[parameters('bastionServerSettings').wsNsg]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "location": "[parameters('bastionServerSettings').location]",
            "dependsOn": [],
            "properties": {
                "securityRules": [
                    {
                        "name": "https",
                        "properties": {
                            "priority": 100,
                            "sourceAddressPrefix": "*",
                            "protocol": "*",
                            "destinationPortRange": "443",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "priority": 101,
                            "sourceAddressPrefix": "*",
                            "protocol": "*",
                            "destinationPortRange": "80",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "winrm",
                        "properties": {
                            "priority": 102,
                            "sourceAddressPrefix": "*",
                            "protocol": "*",
                            "destinationPortRange": "5985",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "httpsout",
                        "properties": {
                            "priority": 1070,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "443",
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "3389",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('bastionServerSettings').wsNic]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "location": "[parameters('bastionServerSettings').location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/',parameters('bastionServerSettings').wsNsg)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('bastionServerSettings').workstationPrivateIP]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('bastionServerSettings').wsPublicIpName)]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionServerSettings').wsNsg)]"
                }
            }
        },
        {
            "name": "[parameters('bastionServerSettings').wsVmName]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "[parameters('apiVersions').computeApiVersion]",
            "location": "[parameters('bastionServerSettings').location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('bastionServerSettings').wsNic)]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('bastionServerSettings').wsDiagStgAcnt)]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('bastionServerSettings').wsVmName]",
                    "adminUsername": "[parameters('bastionServerSettings').Username]",
                    "adminPassword": "[parameters('bastionServerSettings').Password]",
                    "windowsConfiguration": {
                        "provisionVmAgent": true
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('bastionServerSettings').vmSize]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2012-R2-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('bastionServerSettings').storageAccountType]"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('bastionServerSettings').wsNic)]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('bastionServerSettings').wsDiagStgAcnt)).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('bastionServerSettings').wsVmName,'/CustomScriptExtension')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[parameters('bastionServerSettings').location]",
            "apiVersion": "[parameters('apiVersions').computeApiVersion]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('bastionServerSettings').wsVmName)]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.8",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[parameters('bastionServerSettings').workstationSetup]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('powershell.exe -File workstationsetup1.ps1')]"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "workstation-extension",
            "apiVersion": "[parameters('apiVersions').deploymentApiVersion]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('bastionServerSettings').wsVmName,'/extensions/CustomScriptExtension')]"
            ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[parameters('bastionServerSettings').workstationextensionurl]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "bastionServerSettings": {
                        "value": "[parameters('bastionServerSettings')]"
                    },
                    "apiVersions": {
                        "value": "[parameters('apiVersions')]"
                    },
                    "MCSModules": {
                        "value": "[parameters('MCSModules')]"
                    },
                    "PIAFSQLSettings": {
                        "value": "[parameters('PIAFSQLSettings')]"
                    },
                    "PIBAServersettings": {
                        "value": "[parameters('PIBAServersettings')]"
                    },
                    "workstationFQDN": {
                        "value": "[reference(parameters('bastionServerSettings').wsPublicIpName).dnsSettings.fqdn]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "domainJoin",
            "apiVersion": "[parameters('apiVersions').deploymentApiVersion]",
            "dependsOn": [
                "workstation-extension"
            ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[parameters('bastionServerSettings').domainJoinUrl]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "bastionServerSettings": {
                        "value": "[parameters('bastionServerSettings')]"
                    },
                    "apiVersions": {
                        "value": "[parameters('apiVersions')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('bastionServerSettings').wsVmName,'/InstallationDSA6')]",
            "apiVersion": "[parameters('apiVersions').computeApiVersion]",
            "location": "[parameters('bastionServerSettings').location]",
            "scale": null,
            "properties": {
                "publisher": "TrendMicro.DeepSecurity",
                "type": "TrendMicroDSA",
                "typeHandlerVersion": "10.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "DSMname": "[parameters('bastionServerSettings').ManagerAddress]",
                    "DSMport": "[parameters('bastionServerSettings').ActivationPort]",
                    "policyNameorID": ""
                },
                "protectedSettings": {
                    "tenantID": "[parameters('bastionServerSettings').TenantIdentifier]",
                    "tenantPassword": "[parameters('bastionServerSettings').TenantActivationPassword]"
                }
            },
            "dependsOn": [
                "workstation-extension",
                "domainJoin"
            ]
        }
    ],
    "outputs": {
        "workstationFQDN": {
            "type": "string",
            "value": "[reference(parameters('bastionServerSettings').wsPublicIpName).dnsSettings.fqdn]"
        }
    }
}