{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "mcsModules": {
            "type": "object"
        },
        "networkSettings": {
            "type": "object"
        },
        "apiVersions": {
            "type": "object"
        },
        "dnsServerAddress": {
            "type": "array"
        },
        "splunkSettings":{
            "type":"object"
        },
        "routeTable1Id": {
            "type": "string"
        },
        "routeTable2Id": {
            "type": "string"
        }
    },
    "variables": {
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('networkSettings').virtualNetworkName)]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('networkSettings').subnet2Name)]",
        "commandToExecute": "[concat('bash node-setup.sh', ' -r ', variables('splunkSettings').splunkServerRole, ' -p ', parameters('splunkSettings').adminPassword)]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('mcsModules').adstorageAccountName]",
            "apiVersion": "[parameters('apiVersions').storageApiVersion]",
            "location": "[parameters('mcsModules').location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('mcsModules').trendNSG]",
            "location": "[parameters('mcsModules').location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-inbound-ssh",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-inbound-dsmportal",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[parameters('mcsModules').managerPort]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-inbound-dsmagent",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "4118",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-inbound-dsmheartbeat",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[parameters('mcsModules').heartbeatPort]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1300,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-inbound-dsmdownload",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "4122",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1400,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-inbound-dsmwebinstaller",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1500,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('mcsModules').trendsqlServerName]",
            "type": "Microsoft.Sql/servers",
            "location": "[parameters('mcsModules').location]",
            "apiVersion": "[parameters('apiVersions').sqlServerApiVersion]",
            "properties": {
                "administratorLogin": "[parameters('mcsModules').dbAdminName]",
                "administratorLoginPassword": "[parameters('mcsModules').dbAdminPassword]",
                "version": "12.0"
            },
            "resources": [
                {
                    "name": "[parameters('mcsModules').sqlDBName]",
                    "type": "databases",
                    "location": "[parameters('mcsModules').location]",
                    "apiVersion": "[parameters('apiVersions').sqlDBApiVersion]",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('mcsModules').trendsqlServerName)]"
                    ],
                    "properties": {
                        "edition": "Standard",
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "maxSizeBytes": "21474836480",
                        "requestedServiceObjectiveName": "S3"
                    }
                },
                {
                    "type": "firewallrules",
                    "apiVersion": "[parameters('apiVersions').sqlDBApiVersion]",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('mcsModules').trendsqlServerName)]"
                    ],
                    "location": "[parameters('mcsModules').location]",
                    "name": "AllowAllAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('mcsModules').trendNic]",
            "location": "[parameters('mcsModules').location]",
            "dependsOn": [
                "[concat('Microsoft.Sql/servers/', parameters('mcsModules').trendsqlServerName)]",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('mcsModules').trendNSG)]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('mcsModules').trendNSG)]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('mcsModules').trendNicIPAddress]",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('apiVersions').computeApiVersion]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('mcsModules').trendVMName]",
            "location": "[parameters('mcsModules').location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('mcsModules').adstorageAccountName)]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('mcsModules').trendNic)]",
                "[concat('Microsoft.Sql/servers/', parameters('mcsModules').trendsqlServerName)]"
            ],
            "plan": {
                "publisher": "[parameters('mcsModules').trendPublisher]",
                "product": "[parameters('mcsModules').trendProduct]",
                "name": "[parameters('mcsModules').trendVMSku]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('mcsModules').vmSize]"
                },
                "osProfile": {
                    "computerName": "[parameters('mcsModules').trendVMName]",
                    "adminUsername": "[parameters('mcsModules').Username]",
                    "adminPassword": "[parameters('mcsModules').Password]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('mcsModules').trendPublisher]",
                        "offer": "[parameters('mcsModules').trendProduct]",
                        "sku": "[parameters('mcsModules').trendVMSku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('mcsModules').storageAccountType]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('mcsModules').trendNic)]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('mcsModules').adstorageAccountName)).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('mcsModules').trendVMName,'/installDSM')]",
            "apiVersion": "[parameters('apiVersions').computeApiVersion]",
            "location": "[parameters('mcsModules').location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('mcsModules').trendVMName)]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.5",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "commandToExecute": "cp ../../config/0.settings /opt/trend/packages/dsm/default/"
                },
                "protectedSettings": {
                    "subscriptionId": "[subscription().subscriptionId]",
                    "vmName": "[parameters('mcsModules').trendVMName]",
                    "databaseName": "[parameters('mcsModules').sqlDBName]",
                    "adminUserName": "[parameters('mcsModules').dsmAdminName]",
                    "adminPassword": "[parameters('mcsModules').dsmAdminPassword]",
                    "databaseUserName": "[parameters('mcsModules').dbAdminName]",
                    "databaseUserPassword": "[parameters('mcsModules').dbAdminPassword]",
                    "licenseMode": "[parameters('mcsModules').licenseMode]",
                    "databaseServer": "[reference(concat('Microsoft.Sql/servers/', parameters('mcsModules').trendsqlServerName)).fullyQualifiedDomainName]",
                    "location": "[parameters('mcsModules').location]",
                    "managerPort": "[parameters('mcsModules').managerPort]",
                    "heartbeatPort": "[parameters('mcsModules').heartbeatPort]",
                    "vmFQDN": "[parameters('mcsModules').trendNicIPAddress]",
                    "databaseOption": "[parameters('mcsModules').databaseOption]",
                    "vmSize": "[parameters('mcsModules').vmSize]",
                    "resourceGroup": "[parameters('mcsModules').location]",
                    "securityGroupName": "parameters('mcsModules').trendNSG]"
                }
            }
        },
        {
            "name": "[parameters('mcsModules').adNetworkSecurityGroupName]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "location": "[parameters('mcsModules').location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('mcsModules').trendVMName,'/extensions/installDSM')]"
            ],
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "3389",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "winrm",
                        "properties": {
                            "priority": 1001,
                            "sourceAddressPrefix": "*",
                            "protocol": "*",
                            "destinationPortRange": "5985",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('mcsModules').adNicName]",
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "location": "[parameters('mcsModules').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('mcsModules').adNetworkSecurityGroupName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('mcsModules').adNicIPAddress]",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('mcsModules').adNetworkSecurityGroupName)]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('mcsModules').adVMName]",
            "apiVersion": "[parameters('apiVersions').computeApiVersion]",
            "location": "[parameters('mcsModules').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('mcsModules').adNicName)]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('mcsModules').adstorageAccountName)]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('mcsModules').vmSize]"
                },
                "osProfile": {
                    "computerName": "[parameters('mcsModules').adVMName]",
                    "adminUsername": "[parameters('mcsModules').Username]",
                    "adminPassword": "[parameters('mcsModules').Password]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('mcsModules').publisher]",
                        "offer": "[parameters('mcsModules').offer]",
                        "sku": "[parameters('mcsModules').sku]",
                        "version": "[parameters('mcsModules').version]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('mcsModules').storageAccountType]"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": "1023",
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('mcsModules').adNicName)]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('mcsModules').adstorageAccountName)).primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "CreateADForest",
                    "apiVersion": "[parameters('apiVersions').computeApiVersion]",
                    "location": "[parameters('mcsModules').location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('mcsModules').adVMName)]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.19",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[concat(parameters('mcsModules').dscScriptUrl, '/DSC/CreateADPDC.zip')]",
                            "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
                            "Properties": {
                                "DomainName": "[parameters('mcsModules').domainName]",
                                "AdminCreds": {
                                    "UserName": "[parameters('mcsModules').Username]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('mcsModules').Password]"
                            }
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('mcsModules').adVMName,'/InstallationDSA1')]",
            "apiVersion": "[parameters('apiVersions').computeApiVersion]",
            "location": "[parameters('mcsModules').location]",
            "scale": null,
            "properties": {
                "publisher": "TrendMicro.DeepSecurity",
                "type": "TrendMicroDSA",
                "typeHandlerVersion": "10.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "DSMname": "[parameters('mcsModules').ManagerAddress]",
                    "DSMport": "[parameters('mcsModules').ActivationPort]",
                    "policyNameorID": ""
                },
                "protectedSettings": {
                    "tenantID": "[parameters('mcsModules').TenantIdentifier]",
                    "tenantPassword": "[parameters('mcsModules').TenantActivationPassword]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('mcsModules').adVMName,'/extensions/CreateADForest')]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('networkSettings').virtualNetworkName]",
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "location": "[parameters('networkSettings').location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('mcsModules').adVMName,'/extensions/InstallationDSA1')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('networkSettings').addressPrefix]"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": "[parameters('dnsServerAddress')]"
                },
                "subnets": [
                    {
                        "name": "[parameters('networkSettings').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[parameters('networkSettings').subnet1Prefix]"
                        }
                    },
                    {
                        "name": "[parameters('networkSettings').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[parameters('networkSettings').subnet2Prefix]"
                        }
                    },
                    {
                        "name": "[parameters('networkSettings').subnet3Name]",
                        "properties": {
                            "addressPrefix": "[parameters('networkSettings').subnet3Prefix]"
                        }
                    },
                    {
                        "name": "[parameters('networkSettings').subnet4Name]",
                        "properties": {
                            "addressPrefix": "[parameters('networkSettings').subnet4Prefix]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('mcsModules').chefAutoNsg]",
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "location": "[parameters('mcsModules').location]",
            "dependsOn": [],
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "priority": 1010,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "22",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "https",
                        "properties": {
                            "priority": 1020,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "443",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "git",
                        "properties": {
                            "priority": 1030,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "8989",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "httpsout",
                        "properties": {
                            "priority": 1050,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "443",
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "udp",
                        "properties": {
                            "priority": 1040,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "8443",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "winrm",
                        "properties": {
                            "priority": 1060,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "5985",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('mcsModules').chefAutoNic]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "location": "[parameters('mcsModules').location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/',parameters('mcsModules').chefAutoNsg)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('mcsModules').chefAutomateIPAddress]"
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('mcsModules').chefAutoNsg)]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('mcsModules').chefAutoVmName]",
            "apiVersion": "[parameters('apiVersions').computeApiVersion]",
            "location": "[parameters('mcsModules').location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('mcsModules').chefAutoNic)]"
            ],
            "plan": {
                "name": "[parameters('mcsModules').chefImageSKU]",
                "product": "[parameters('mcsModules').chefImageOffer]",
                "publisher": "[parameters('mcsModules').chefImagePublisher]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('mcsModules').vmSize]"
                },
                "osProfile": {
                    "computerName": "[parameters('mcsModules').chefAutoVmName]",
                    "adminUsername": "[parameters('mcsModules').Username]",
                    "adminPassword": "[parameters('mcsModules').Password]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('mcsModules').chefImagePublisher]",
                        "offer": "[parameters('mcsModules').chefImageOffer]",
                        "sku": "[parameters('mcsModules').chefImageSKU]",
                        "version": "[parameters('mcsModules').chefImageVersion]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('mcsModules').storageAccountType]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('mcsModules').chefAutoNic)]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('mcsModules').adstorageAccountName)).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('mcsModules').chefAutoVmName,'/automate_setup')]",
            "apiVersion": "[parameters('apiVersions').computeApiVersion]",
            "location": "[parameters('mcsModules').location]",
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[parameters('mcsModules').chefAutoScriptUrl1]"
                    ],
                    "commandToExecute": "[concat(parameters('mcsModules').rubyPath, ' ./automate_setup.rb --fqdn \"', parameters('mcsModules').chefAutomateIPAddress, '\" --license \"',parameters('mcsModules').automateLicenseUri, '\"',' --adminUsername \"',parameters('mcsModules').Username,'\"',' --firstname ','\"',parameters('mcsModules').firstname,'\"',' --lastname ','\"',parameters('mcsModules').lastname,'\"',' --mailid ','\"',parameters('mcsModules').mailid,'\"',' --adminpassword ','\"',parameters('mcsModules').Password,'\"',' --orguser ','\"',parameters('mcsModules').orguser,'\"')]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('mcsModules').chefAutoVmName)]"
            ]
        },
        {
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('splunkSettings').networkSecurityGroupName]",
            "location": "[parameters('splunkSettings').location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-SSH",
                        "properties": {
                            "description": "Allows SSH traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[variables('splunkSettings').sshFrom]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow-HTTP",
                        "properties": {
                            "description": "Allows HTTP traffic on port 8000",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8000",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow-HTTPS",
                        "properties": {
                            "description": "Allows HTTPS traffic on port 443",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow-HTTP-Event-Collector",
                        "properties": {
                            "description": "Allows HTTP(S) Event Collector traffic on port 8088",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8088",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow-Receiver-TCP",
                        "properties": {
                            "description": "Allows receiver TCP traffic on port 9997",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "9997",
                            "sourceAddressPrefix": "[variables('splunkSettings').forwardedDatafrom]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 140,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow-Mgmt-From-VNET",
                        "properties": {
                            "description": "Allows mgmt on port 8089 from VNET only",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8089",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 150,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('splunkSettings').clientnsgName]",
            "location": "[parameters('splunkSettings').location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "clientout",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('splunkSettings').splunknetworkInterfaceName]",
            "location": "[parameters('splunkSettings').location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('splunkSettings').networkSecurityGroupName)]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('splunkSettings').networkSecurityGroupName)]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('splunkSettings').splunkprivateIP]",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('splunkSettings').clientnetworkInterfaceName]",
            "location": "[parameters('splunkSettings').location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('splunkSettings').clientnsgName)]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('splunkSettings').clientnsgName)]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('splunkSettings').clientprivateIP]",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            } 
        },
        {
            "apiVersion": "[parameters('apiVersions').computeApiVersion]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('splunkSettings').vmName]",
            "location": "[variables('splunkSettings').location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('splunkSettings').splunknetworkInterfaceName)]"
            ],
            "plan": {
                "name": "[variables('splunkSettings').imageSKU]",
                "product": "[variables('splunkSettings').imageOffer]",
                "publisher": "[variables('splunkSettings').imagePublisher]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('splunkSettings').vmSize]"
                },
                "osProfile": {
                    "computername": "[variables('splunkSettings').vmName]",
                    "adminUsername": "[parameters('splunkSettings').adminUsername]",
                    "adminPassword": "[parameters('splunkSettings').adminPassword]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('splunkSettings').imagePublisher]",
                        "offer": "[variables('splunkSettings').imageOffer]",
                        "sku": "[variables('splunkSettings').imageSKU]",
                        "version": "[variables('splunkSettings').imageVersion]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('splunkSettings').storageAccountType]"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": "1023",
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('splunkSettings').splunknetworkInterfaceName)]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('mcsModules').adstorageAccountName)).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('splunkSettings').vmName,'/', variables('splunkSettings').vmExtensionName)]",
            "apiVersion": "[variables('')]",
            "location": "[variables('').location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('splunkSettings').vmName)]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "[variables('splunkSettings').typeHandlerVersion]",
                "settings": {
                    "fileUris": [
                        "[variables('')]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[variables('commandToExecute')]"
                }
            }
        }
    ]
}